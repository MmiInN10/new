// Generated by view binder compiler. Do not edit!
package com.live2d.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.live2d.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout alarmSelectionLayout;

  @NonNull
  public final LinearLayout alarmSettingLayout;

  @NonNull
  public final ImageView btnConfirm;

  @NonNull
  public final LinearLayout dateSelectionLayout;

  @NonNull
  public final FrameLayout deleteContainer;

  @NonNull
  public final EditText editTextEventTitle;

  @NonNull
  public final ImageView ivAlarmForward;

  @NonNull
  public final ImageView ivCancel;

  @NonNull
  public final ImageView ivDateForward;

  @NonNull
  public final ImageView ivDatePicker;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final LinearLayout layoutPushAlarm;

  @NonNull
  public final Switch switchTime;

  @NonNull
  public final LinearLayout timePickerLayout;

  @NonNull
  public final LinearLayout timeSelectionLayout;

  @NonNull
  public final LinearLayout topBar;

  @NonNull
  public final TextView tvAlarmTime;

  @NonNull
  public final TextView tvEndTime;

  @NonNull
  public final TextView tvSelectedDate;

  @NonNull
  public final TextView tvSelectedEndTime;

  @NonNull
  public final TextView tvSelectedStartTime;

  @NonNull
  public final TextView tvStartTime;

  private ActivityEditBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout alarmSelectionLayout, @NonNull LinearLayout alarmSettingLayout,
      @NonNull ImageView btnConfirm, @NonNull LinearLayout dateSelectionLayout,
      @NonNull FrameLayout deleteContainer, @NonNull EditText editTextEventTitle,
      @NonNull ImageView ivAlarmForward, @NonNull ImageView ivCancel,
      @NonNull ImageView ivDateForward, @NonNull ImageView ivDatePicker,
      @NonNull ImageView ivDelete, @NonNull LinearLayout layoutPushAlarm,
      @NonNull Switch switchTime, @NonNull LinearLayout timePickerLayout,
      @NonNull LinearLayout timeSelectionLayout, @NonNull LinearLayout topBar,
      @NonNull TextView tvAlarmTime, @NonNull TextView tvEndTime, @NonNull TextView tvSelectedDate,
      @NonNull TextView tvSelectedEndTime, @NonNull TextView tvSelectedStartTime,
      @NonNull TextView tvStartTime) {
    this.rootView = rootView;
    this.alarmSelectionLayout = alarmSelectionLayout;
    this.alarmSettingLayout = alarmSettingLayout;
    this.btnConfirm = btnConfirm;
    this.dateSelectionLayout = dateSelectionLayout;
    this.deleteContainer = deleteContainer;
    this.editTextEventTitle = editTextEventTitle;
    this.ivAlarmForward = ivAlarmForward;
    this.ivCancel = ivCancel;
    this.ivDateForward = ivDateForward;
    this.ivDatePicker = ivDatePicker;
    this.ivDelete = ivDelete;
    this.layoutPushAlarm = layoutPushAlarm;
    this.switchTime = switchTime;
    this.timePickerLayout = timePickerLayout;
    this.timeSelectionLayout = timeSelectionLayout;
    this.topBar = topBar;
    this.tvAlarmTime = tvAlarmTime;
    this.tvEndTime = tvEndTime;
    this.tvSelectedDate = tvSelectedDate;
    this.tvSelectedEndTime = tvSelectedEndTime;
    this.tvSelectedStartTime = tvSelectedStartTime;
    this.tvStartTime = tvStartTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alarm_selection_layout;
      LinearLayout alarmSelectionLayout = ViewBindings.findChildViewById(rootView, id);
      if (alarmSelectionLayout == null) {
        break missingId;
      }

      id = R.id.alarm_setting_layout;
      LinearLayout alarmSettingLayout = ViewBindings.findChildViewById(rootView, id);
      if (alarmSettingLayout == null) {
        break missingId;
      }

      id = R.id.btn_confirm;
      ImageView btnConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirm == null) {
        break missingId;
      }

      id = R.id.date_selection_layout;
      LinearLayout dateSelectionLayout = ViewBindings.findChildViewById(rootView, id);
      if (dateSelectionLayout == null) {
        break missingId;
      }

      id = R.id.delete_container;
      FrameLayout deleteContainer = ViewBindings.findChildViewById(rootView, id);
      if (deleteContainer == null) {
        break missingId;
      }

      id = R.id.editTextEventTitle;
      EditText editTextEventTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextEventTitle == null) {
        break missingId;
      }

      id = R.id.ivAlarmForward;
      ImageView ivAlarmForward = ViewBindings.findChildViewById(rootView, id);
      if (ivAlarmForward == null) {
        break missingId;
      }

      id = R.id.ivCancel;
      ImageView ivCancel = ViewBindings.findChildViewById(rootView, id);
      if (ivCancel == null) {
        break missingId;
      }

      id = R.id.ivDateForward;
      ImageView ivDateForward = ViewBindings.findChildViewById(rootView, id);
      if (ivDateForward == null) {
        break missingId;
      }

      id = R.id.ivDatePicker;
      ImageView ivDatePicker = ViewBindings.findChildViewById(rootView, id);
      if (ivDatePicker == null) {
        break missingId;
      }

      id = R.id.ivDelete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.layout_push_alarm;
      LinearLayout layoutPushAlarm = ViewBindings.findChildViewById(rootView, id);
      if (layoutPushAlarm == null) {
        break missingId;
      }

      id = R.id.switch_time;
      Switch switchTime = ViewBindings.findChildViewById(rootView, id);
      if (switchTime == null) {
        break missingId;
      }

      id = R.id.time_picker_layout;
      LinearLayout timePickerLayout = ViewBindings.findChildViewById(rootView, id);
      if (timePickerLayout == null) {
        break missingId;
      }

      id = R.id.time_selection_layout;
      LinearLayout timeSelectionLayout = ViewBindings.findChildViewById(rootView, id);
      if (timeSelectionLayout == null) {
        break missingId;
      }

      id = R.id.top_bar;
      LinearLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.tv_alarm_time;
      TextView tvAlarmTime = ViewBindings.findChildViewById(rootView, id);
      if (tvAlarmTime == null) {
        break missingId;
      }

      id = R.id.tv_end_time;
      TextView tvEndTime = ViewBindings.findChildViewById(rootView, id);
      if (tvEndTime == null) {
        break missingId;
      }

      id = R.id.tv_selected_date;
      TextView tvSelectedDate = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectedDate == null) {
        break missingId;
      }

      id = R.id.tv_selected_end_time;
      TextView tvSelectedEndTime = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectedEndTime == null) {
        break missingId;
      }

      id = R.id.tv_selected_start_time;
      TextView tvSelectedStartTime = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectedStartTime == null) {
        break missingId;
      }

      id = R.id.tv_start_time;
      TextView tvStartTime = ViewBindings.findChildViewById(rootView, id);
      if (tvStartTime == null) {
        break missingId;
      }

      return new ActivityEditBinding((ConstraintLayout) rootView, alarmSelectionLayout,
          alarmSettingLayout, btnConfirm, dateSelectionLayout, deleteContainer, editTextEventTitle,
          ivAlarmForward, ivCancel, ivDateForward, ivDatePicker, ivDelete, layoutPushAlarm,
          switchTime, timePickerLayout, timeSelectionLayout, topBar, tvAlarmTime, tvEndTime,
          tvSelectedDate, tvSelectedEndTime, tvSelectedStartTime, tvStartTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
